#!/usr/bin/env bash

echo "

██████╗ ███████╗███████╗██████╗  ██████╗ ██████╗ ███████╗
██╔══██╗██╔════╝██╔════╝██╔══██╗██╔═══██╗██╔══██╗██╔════╝
██║  ██║█████╗  █████╗  ██████╔╝██║   ██║██████╔╝███████╗
██║  ██║██╔══╝  ██╔══╝  ██╔═══╝ ██║   ██║██╔═══╝ ╚════██║
██████╔╝███████╗███████╗██║     ╚██████╔╝██║     ███████║
╚═════╝ ╚══════╝╚══════╝╚═╝      ╚═════╝ ╚═╝     ╚══════╝
                                                         
"

host_path=${DEEPOPS_HOST_ROOT_PATH:-`pwd`}

docker="docker run --rm -ti --net=host"
docker_mnt_config="-v ${host_path}/config:/source/deepops/config"
docker_mnt_ssh="-v ${host_path}/ssh:/root/.ssh"

case "$1" in
    bootstrap)
        shift

        # create default configuration directory if not exists
        echo -en "Creating default configuration directory:\t`pwd`/config\t"
        if ! [ -d ${host_path}/config ] ; then
            mkdir -p ${host_path}/config
            ${docker} ${docker_mnt_config} -u $(id -u):$(id -g) deepops_deploy cp -r config.example/. config/
            ${docker} ${docker_mnt_config} -u $(id -u):$(id -g) deepops_deploy cp -r kubespray/inventory/sample/hosts.ini config/kube-mgmt-hosts.ini
            echo "[created]"
        else
            echo "[exists, not creating]"
        fi

        # create default ssh key directory if not exists
        echo -en "Creating default SSH directory:\t\t\t`pwd`/ssh\t"
        if ! [ -d ${host_path}/ssh ] ; then
            mkdir -p ${host_path}/ssh
            ssh-keygen -f ssh/deepops_rsa -P "" >/dev/null 2>&1
            echo "[created]"
        else
            echo "[exists, not creating]"
        fi

        # copy specified or default ssh key if not using password auth
        ssh_key=${SSH_KEY:-~/.ssh/id_rsa}
        for arg in "$@" ; do
            if [ "$arg" == "--password" ] ; then
                ssh_key=
                echo "Password authentication"
            fi
        done
        if [ "x${ssh_key}" != "x" ] ; then
            echo "SSH key authentication"
            echo -e "Using SSH key:\t\t\t${ssh_key}"
            if ! [ -f ${ssh_key} ] ; then
                echo
                echo "ERROR: SSH (${ssh_key}) does not exist"
                exit 1
            fi
            cp ${ssh_key} ssh/bootstrap_rsa
            echo -e "Coppied SSH key to:\t\t`pwd`/ssh/bootstrap_rsa"
            ssh_key="--ssh-key /root/.ssh/bootstrap_rsa"
        fi

        # run bootstrap playbook
        echo
        ${docker} ${docker_mnt_config} ${docker_mnt_ssh} deepops_deploy setup_deepops_user ${ssh_key} "$@"

        # remove copied ssh private key
        if [ -f ssh/bootstrap_rsa ] ; then
            rm -f ssh/bootstrap_rsa
            echo -e "Removed SSH key:\t\t`pwd`/ssh/bootstrap_rsa"
        fi
        ;;
    k8s|kube|kubernetes)
        ${docker} ${docker_mnt_config} ${docker_mnt_ssh} deepops_deploy ansible-playbook -b -i config/kube-mgmt-hosts.ini --extra-vars "@config/kube.yml" kubespray/cluster.yml
        ;;
    bash)
        ${docker} ${docker_mnt_config} ${docker_mnt_ssh} deepops_deploy bash
        ;;
    cmd)
        shift
        ${docker} ${docker_mnt_config} ${docker_mnt_ssh} deepops_deploy $@
        ;;
    *)
        echo "Usage: $0 bootstrap [OPTIONS]"
        echo
        ${docker} deepops_deploy setup_deepops_user --help | tail -n+3 | grep -v ssh
        echo "Environment variables:"
        echo -e "  SSH_KEY=/path/to/ssh/key\tUse alternate SSH key (default: ~/.ssh/id_rsa) instead of password"
        echo
        echo "Notes:"
        echo -e "  You can pass the '--ip' flag multiple times for multiple management servers"
        echo -e "  Omit the '--password' flag to use an SSH key"
        ;;
esac
